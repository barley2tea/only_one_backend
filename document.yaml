openapi: 3.0.3
info:
  title: only_one_backend
  description: |-
    This is the flask-based API that forms the backend of 'DormiTool'.
  license:
    name: flask 2.2.x
    url: https://msiz07-flask-docs-ja.readthedocs.io/ja/latest/license.html
  version: 2.1.0
servers:
  - url: https://mmm-foktm-iot.ishikawa-nct.ac.jp
    description: Production Server
  - url: http://localhost:5000
    description: Executing with uWSGI
  - url: http://localhost:5500
    description: Deveropment Server
tags:
  - name: IoT
    description: API provided to the IoT devices
  - name: api
paths:
  /:
    post:
      tags:
        - IoT
      summary: Adding data to the dashboard
      description: Adding data to the dashboard. Only authorized devices and authorized data items will be allowed to access this URL. A client certificate is required for access.
      deprecated: false
      requestBody:
        required: true
        description: Add data to mysql
        content:
          application/json:
            schema:
              type: object
              properties:
                DR_311:
                  type: integer
                  format: int8
                  example: 1
                  description: IoTID as key, status (0 or 1) as value
                DR_312:
                  type: integer
                  format: int8
                  example: 0
          image/jpeg:
            schema:
              type: string
              format: binary
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
        '400':
          description: Invalid request supplied
        '403':
          description: Unauthorized IP
    
  /api/dashboard:
    get:
      tags:
        - api
      summary: Getting dashboard data
      description: Getting latest dashboard data. If no data is registered in the DB, the corresponding item in the array will be null. If it is the end of the array, the element itself will be missing. If the data for a floor or dormitory is not all registered, the corresponding floor or dormitory item will disappear. This situation is highly unlikely, so in most cases you don't need to think about it.
      deprecated: false
      parameters:
        - name: dormitory
          in: query
          description: Name of the dormitory building to get. If this parameter is ALL or not using, get all data of domitory.
          schema:
            type: string
            example: MOU, CEN, SEA, SPA or ALL
        - name: floor
          in: query
          description: The building floor to get. This parameter is ignored if the dormitory parameter is ALL or not specified. If this parameter is ALL or not using, get all data of floor.
          schema:
            type: string
            example: 1 ~ 5 or ALL
        - name: type
          in: query
          description: Name of the data item to get. If this parameter is PB, other parameter is ignored. If this parameter is ALL or not using, get all data items.
          schema:
            type: string
            example: DR, WA, SW, PB or ALL
        - name: timeExclusion
          in: query
          description: If sending true in this parameter, It will return NULL for any items whose data has not been updated for a certain period of time. This parameter allows you to filter out data that is too old and not in keeping with the current situation.
          schema:
            type: string
            example: true
            
      responses:
        '200':
          description: Successful operation. If a parameter is specified, only the specified items are returned. Also, if the target item does not exist (e.g. dormitory=MOU&floor=4), an empty element is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessDashboard'
        
        '400':
          description: Invalid query parameters.

  /api/dashboard_details:
    get:
      tags:
        - api
      summary: Getting Detailed data on the dashboard
      description: Getting detailed data on the dashboard. If no data is registered in the DB, the corresponding items will not be included. This is provides more detailed information than "/api/dashboard". Therefore, it can be said to be a superior version of that.
      deprecated: false
      parameters:
        - name: id
          in: query
          description: Specify by IoTID.
          schema:
            type: string
            example: WA_311
        - name: dormitory
          in: query
          description: Name of the dormitory building to get. If this parameter is ALL or not using, get all data of domitory.
          schema:
            type: string
            example: MOU, CEN, SEA, SPA or ALL
        - name: floor
          in: query
          description: The building floor to get. This parameter is ignored if the dormitory parameter is ALL or not specified. If this parameter is ALL or not using, get all data of floor.
          schema:
            type: string
            example: 1 ~ 5 or ALL
        - name: type
          in: query
          description: Name of the data item to get. If this parameter is PB, other parameter is ignored. If this parameter is ALL or not using, get all data items.
          schema:
            type: string
            example: DR, WA, SW, PB or ALL
      responses:
        '200':
          description: Successful operation. If a parameter is specified, only the specified items are returned. Also, if the target item does not exist (e.g. dormitory=MOU&floor=4), an empty element is returned. When "type" is null,  "status" is an integer and "dormitory", "floor", "num" is null when "type" is PB. When the "status" is False or "type" is PB, "startedTime" is null.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessDashboardDetailed'
        
        '400':
          description: Invalid query parameters.

  /api/transitions:
    get:
      tags:
        - api
      summary: Get usage transitions
      description: Get usage transitions.
      deprecated: false
      parameters:
        - name: id
          in: query
          description: Specify by IoTID.
          schema:
            type: string
            example: WA_311
        - name: dormitory
          in: query
          description: Name of the dormitory building to get. If this parameter is ALL or not using, get all data of domitory.
          schema:
            type: string
            example: MOU, CEN, SEA, SPA or ALL
        - name: floor
          in: query
          description: The building floor to get. This parameter is ignored if the dormitory parameter is ALL or not specified. If this parameter is ALL or not using, get all data of floor.
          schema:
            type: string
            example: 1 ~ 5 or ALL
        - name: type
          in: query
          description: Name of the data item to get. If this parameter is PB, other parameter is ignored. If this parameter is ALL or not using, get all data items.
          schema:
            type: string
            example: DR, WA, SW, PB or ALL
        - name: weekday
          in: query
          description: Specify the day of the week to count.
          schema:
            type: string
            example: MON, MONDAY, TUE, TUESDAY and so on.
        - name: weekly
          in: query
          description: Flag to specify whether to include items calculated using data from the past week.
          schema:
            type: string
            example: TRUE
        - name: monthly
          in: query
          description: Flag to specify whether to include items calculated using data from the past month.
          schema:
            type: string
            example: TRUE
        - name: halfYear
          in: query
          description: Flag to specify whether to include items calculated using data from the past half year.
          schema:
            type: string
            example: TRUE
        - name: startTime
          in: query
          description: Specifies the start of the period to aggregate. This is added as a separate label. If not used with endTime, HTTP status 400 will be returned.
          schema:
            type: string
            example: YYYY-MM-DD-hh:mm:ss
        - name: endTime
          in: query
          description: Specifies the end of the period to aggregate. This is added as a separate label. If not used with endTime, HTTP status 400 will be returned.
          schema:
            type: string
            example: YYYY-MM-DD-hh:mm:ss
        - name: groupByDormitory
          in: query
          description: Specify whether to group by dormitory building. If groupByFloor or groupByID is specified, this parameter is ignored.
          schema:
            type: string
            example: TRUE
        - name: groupByFloor
          in: query
          description: Specify whether to group by dormitory building and floor. If or groupByID is specified, this parameter is ignored.
          schema:
            type: string
            example: TRUE
        - name: groupByID
          in: query
          description: Specify whether to group by dormitory building.
          schema:
            type: string
            example: TRUE
      responses:
        '200':
          description: Successful operation. If groupByFloor is TRUE, "No" is not include. If groupByDormitory is TRUE, "floor" and "No" is not include. If don't group "floor", "dormitory" and "No" is not include. If there are missing values in the data in the datasets, those values will be null. If the data does not exist, it will not be included in the response, regardless of whether the flag is set or not.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessTransitions'
        
        '400':
          description: Invalid query parameters.
  
  
components:
  schemas:
    Success:
      type: object
      properties:
        status:
          type: string
          example: success
        data:
          type: array
          items:
            type: object
            properties:
              ID:
                type: string
                example: IoTID
              status:
                type: integer
                example: 1
    SuccessDashboard:
      type: object
      properties:
        MOU:
          type: object
          properties:
            F1:
              type: object
              properties:
                DR:
                  type: array
                  items:
                    type: boolean
                WA:
                  type: array
                  items:
                    type: boolean
            F2:
              type: object
              properties:
                DR:
                  type: array
                  items:
                    type: boolean
                WA:
                  type: array
                  items:
                    type: boolean
            F3:
              type: object
              properties:
                DR:
                  type: array
                  items:
                    type: boolean
                WA:
                  type: array
                  items:
                    type: boolean
            SW:
              type: array
              items:
                type: boolean
        CEN:
          type: object
          properties:
            F1:
              type: object
              properties:
                DR:
                  type: array
                  items:
                    type: boolean
                WA:
                  type: array
                  items:
                    type: boolean
            F2:
              type: object
              properties:
                DR:
                  type: array
                  items:
                    type: boolean
                WA:
                  type: array
                  items:
                    type: boolean
            F3:
              type: object
              properties:
                DR:
                  type: array
                  items:
                    type: boolean
                WA:
                  type: array
                  items:
                    type: boolean
            SW:
              type: array
              items:
                type: boolean
        SEA:
          type: object
          properties:
            F1:
              type: object
              properties:
                DR:
                  type: array
                  items:
                    type: boolean
                WA:
                  type: array
                  items:
                    type: boolean
            F2:
              type: object
              properties:
                DR:
                  type: array
                  items:
                    type: boolean
                WA:
                  type: array
                  items:
                    type: boolean
            F3:
              type: object
              properties:
                DR:
                  type: array
                  items:
                    type: boolean
                WA:
                  type: array
                  items:
                    type: boolean
            SW:
              type: array
              items:
                type: boolean
        SPA:
          type: object
          properties:
            F1:
              type: object
              properties:
                DR:
                  type: array
                  items:
                    type: boolean
                WA:
                  type: array
                  items:
                    type: boolean
            F2:
              type: object
              properties:
                DR:
                  type: array
                  items:
                    type: boolean
                WA:
                  type: array
                  items:
                    type: boolean
            F3:
              type: object
              properties:
                DR:
                  type: array
                  items:
                    type: boolean
                WA:
                  type: array
                  items:
                    type: boolean
            F4:
              type: object
              properties:
                DR:
                  type: array
                  items:
                    type: boolean
                WA:
                  type: array
                  items:
                    type: boolean
            F5:
              type: object
              properties:
                DR:
                  type: array
                  items:
                    type: boolean
                WA:
                  type: array
                  items:
                    type: boolean
            SW:
              type: array
              items:
                type: boolean
        PB:
          type: array
          items:
            type: integer
    SuccessDashboardDetailed:
      type: array
      items:
        type: object
        properties:
          dormitory:
            type: string
            example: MOU, CEN, SEA, SPA or ALL
          floor:
            type: integer
            example: 1 ~ 5
          No:
            type: integer
            example: 1 ~ 4
          startedTime:
            type: string
            example: YYYY-MM-DD hh:mm:ss
          lastDataTime:
            type: string
            example: YYYY-MM-DD hh:mm:ss
          status:
            type: integer
            example: boolean or integer
          type:
            type: string
            example: DR, WA, SW, PB or ALL
    SuccessTransitions:
      type: array
      items:
        type: object
        properties:
          type:
            type: string
            example: DR, WA, SW, PB or ALL
          dormitory:
            type: string
            example: MOU, CEN, SEA, SPA or ALL
          floor:
            type: integer
            example: 1 ~ 5
          No:
            type: integer
            example: 1 ~ 4
          data:
            type: object
            properties:
              labels:
                type: array
                items:
                  type: string
                  example: hh:mm:ss
              datasets:
                type: array
                items:
                  type: object
                  properties:
                    label:
                      type: string
                      example: 一週間
                    data:
                      type: array
                      items:
                        type: number
                        example: 3.1
